name: shared

networks:
  shared-network:
    external: true

services:
  mongodb:
    image: mongo
    container_name: mongodb-container
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
    volumes:
      - mongodb-data:/data/db
      - ./dump:/docker-entrypoint-initdb.d # Seed data on first startup
      - ./scripts/mongo-init-dev.sh:/docker-entrypoint-initdb.d/mongo-init.sh # drops database and restores from docker to ensure latest data
    networks:
      - shared-network

  mongodb-exporter:
    image: percona/mongodb_exporter:0.43.0
    container_name: mongodb-exporter
    restart: unless-stopped
    ports:
      - "9216:9216"
    environment:
      - MONGODB_URI=mongodb://admin:adminpassword@localhost:27017
    depends_on:
      - mongodb
    networks:
      - shared-network
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - prom_data:/prometheus
      - ./docker/config/prometheus/prometheus.dev.yml:/etc/prometheus/prometheus.yml
      - ./docker/config/prometheus/alertmanager.dev.yml:/etc/prometheus/alertmanager.yml
      - ./docker/config/prometheus/rules:/etc/prometheus/rules
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.enable-lifecycle"
    networks:
      - shared-network
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - ./docker/config/prometheus/alertmanager.dev.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    restart: unless-stopped
    volumes:
      - ./docker/config/loki/loki-config.yml:/etc/loki/local-config.yaml
      - ./docker/config/loki/wal:/wal
    ports:
      - "3100:3100"
    networks:
      - shared-network

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    restart: unless-stopped
    volumes:
      # - /var/log:/var/log                # Access to host logs
      - /var/lib/docker/containers:/var/lib/docker/containers  # Access to container logs
      - ./docker/config/promtail:/etc/promtail                 # Promtail config file
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - shared-network
    command: -config.file=/etc/promtail/promtail.yml
      
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./docker/config/grafana:/etc/grafana/provisioning
      - ./docker/data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - shared-network
    links:
      - loki
volumes:
  prom_data:
  mongodb-data:
  grafana-storage:
  loki-data:
